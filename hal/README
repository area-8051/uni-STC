This Hardware Abstraction Layer (HAL) builds upon uni-STC to expose 
peripherals and features in an MCU-independent way.

In order to use it, copy the files you need in your project directory 
and create a project-defs.h file which includes the selected MCU's 
header file from include/STC/, and defines pin assignments and other 
application configuration choices.

In addition to project-defs.h, applications using uni-STC are REQUIRED 
to define the MCU_FREQ macro, specifying the MCU's operating frequency 
in Herz as an unsigned long, e.g.: -DMCU_FREQ=24000000UL

To port your application to another STC MCU (provided it has the 
required features, of course), you just need to change project-defs.h 
and rebuild your project.

Internal dependencies between HAL modules are described in their 
respective header files.

See the projects under the demos/ directory for examples.

Some peripheral support is incomplete (e.g. uart-hal doesn't support 
9-bit mode) because I haven't had the need for all their features yet.

All STC periperals aren't supported yet (e.g. advanced PWM) for the 
same reason.

I'll add more as the need arises in the course of my projects.

I'm also aware documentation is... well, perfectible.
Feel free to ask if you have any question.
